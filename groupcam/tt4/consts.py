import ctypes


# The length of a string (characters, not bytes) which is used to
# extract information from this DLL.
#
# If a string is passed to the client instance is longer than
# TT_STRLEN it will be truncated.
#
# On Windows the client instance converts unicode characters to
# UTF-8 before transmission, so be aware of non-ASCII characters
# if communicating with the TeamTalk server from another
# applications than the TeamTalk client.
TT_STRLEN = 512


#  The maximum number of video formats which will be queried
#  for a VideoCaptureDevice.
TT_CAPTUREFORMATS_MAX = 128


# Using subscribtions can, however, change what the local client instance
# is willing to accept from other users.
Subscription = ctypes.c_uint
(
    SUBSCRIBE_NONE,
    SUBSCRIBE_USER_MSG,
    SUBSCRIBE_CHANNEL_MSG,
    SUBSCRIBE_BROADCAST_MSG,
    SUBSCRIBE_AUDIO,
    SUBSCRIBE_VIDEO,
    SUBSCRIBE_DESKTOP,
    SUBSCRIBE_CUSTOM_MSG,
    SUBSCRIBE_INTERCEPT_USER_MSG,
    SUBSCRIBE_INTERCEPT_CHANNEL_MSG,
    SUBSCRIBE_INTERCEPT_AUDIO,
    SUBSCRIBE_INTERCEPT_VIDEO,
    SUBSCRIBE_INTERCEPT_DESKTOP,
    SUBSCRIBE_INTERCEPT_CUSTOM_MSG
) = [0x0000, 0x0001, 0x0002, 0x0004, 0x0008, 0x0010, 0x0020,
     0x0040, 0x0100, 0x0200, 0x0800, 0x1000, 0x2000, 0x4000]

# Enum specifying data transmission types
TransmitType = ctypes.c_uint
(
    TRANSMIT_NONE,
    TRANSMIT_AUDIO,
    TRANSMIT_VIDEO,
) = list(range(3))


# The codecs supported.
Codec = ctypes.c_uint
(
    NO_CODEC,
    SPEEX_CODEC,
    CELT_0_5_2_OBSOLETE_CODEC,
    THEORA_CODEC,
    SPEEX_VBR_CODEC,
    CELT_CODEC,
    CELT_VBR_CODEC,
) = list(range(7))

# The picture format used by a capture device.
FourCC = ctypes.c_uint
(
    FOURCC_NONE,
    FOURCC_I420,
    FOURCC_YUY2,
    FOURCC_RGB32,
) = [0, 100, 101, 102]


# For TT_DoChangeStatus
StatusMode = ctypes.c_uint
(
    STATUS_AVAILABLE,
    STATUS_AWAY,
    STATUS_QUESTION,
    STATUS_MODE,
    STATUS_FLAGS,
    STATUS_FEMALE,
    STATUS_VIDEOTX,
    STATUS_DESKTOP,
    STATUS_STREAM_MEDIAFILE,
) = [0x00000000, 0x00000001, 0x00000002, 0x000000FF, 0xFFFFFF00,
     0x00000100, 0x00000200, 0x00000400, 0x00000800]

# Flags used to describe the the client instance current state.
ClientFlag = ctypes.c_uint
(
    CLIENT_CLOSED,
    CLIENT_SNDINPUT_READY,
    CLIENT_SNDOUTPUT_READY,
    CLIENT_VIDEO_READY,
    CLIENT_DESKTOP_ACTIVE,
    CLIENT_SNDINPUT_VOICEACTIVATED,
    CLIENT_SNDINPUT_DENOISING,
    CLIENT_SNDINPUT_AGC,
    CLIENT_SNDOUTPUT_MUTE,
    CLIENT_SNDOUTPUT_AUTO3DPOSITION,
    CLIENT_SNDINPUT_AEC,
    CLIENT_SNDINOUTPUT_DUPLEX,
    CLIENT_TX_AUDIO,
    CLIENT_TX_VIDEO,
    CLIENT_MUX_AUDIOFILE,
    CLIENT_TX_DESKTOP,
    CLIENT_CONNECTING,
    CLIENT_CONNECTED,
    CLIENT_CONNECTION,
    CLIENT_AUTHORIZED,
    CLIENT_P2P_AUDIO,
    CLIENT_P2P_VIDEO,
    CLIENT_P2P,
    CLIENT_STREAM_AUDIO,
    CLIENT_STREAM_VIDEO,
) = [0x00000000, 0x00000001, 0x00000002, 0x00000004, 0x00000008,
     0x00000010, 0x00000020, 0x00000040, 0x00000080, 0x00000100,
     0x00000200, 0x00000400, 0x00001000, 0x00002000, 0x00004000,
     0x00008000, 0x00010000, 0x00020000, 0x00040000, 0x00040000,
     0x00100000, 0x00200000, 0x00300000, 0x00400000, 0x00800000]


# Used as an initial value for #ClientEvent.
WM_USER = 0


# TeamTalk client event messages. On Windows these messages are posted
# to the HWND which was provided to #TT_InitTeamTalk
ClientEvent = ctypes.c_uint
(
    WM_TEAMTALK_CON_SUCCESS,
    WM_TEAMTALK_CON_FAILED,
    WM_TEAMTALK_CON_LOST,
    WM_TEAMTALK_CON_P2P,
    WM_TEAMTALK_CMD_PROCESSING,
    WM_TEAMTALK_CMD_MYSELF_LOGGEDIN,
    WM_TEAMTALK_CMD_MYSELF_LOGGEDOUT,
    WM_TEAMTALK_CMD_MYSELF_JOINED,
    WM_TEAMTALK_CMD_MYSELF_LEFT,
    WM_TEAMTALK_CMD_MYSELF_KICKED,
    WM_TEAMTALK_CMD_USER_LOGGEDIN,
    WM_TEAMTALK_CMD_USER_LOGGEDOUT,
    WM_TEAMTALK_CMD_USER_UPDATE,
    WM_TEAMTALK_CMD_USER_JOINED,
    WM_TEAMTALK_CMD_USER_LEFT,
    WM_TEAMTALK_CMD_USER_TEXTMSG,
    WM_TEAMTALK_CMD_CHANNEL_NEW,
    WM_TEAMTALK_CMD_CHANNEL_UPDATE,
    WM_TEAMTALK_CMD_CHANNEL_REMOVE,
    WM_TEAMTALK_CMD_SERVER_UPDATE,
    WM_TEAMTALK_CMD_FILE_NEW,
    WM_TEAMTALK_CMD_FILE_REMOVE,
    WM_TEAMTALK_CMD_ERROR,
    WM_TEAMTALK_CMD_SUCCESS,
    WM_TEAMTALK_USER_TALKING,
    WM_TEAMTALK_USER_VIDEOFRAME,
    WM_TEAMTALK_USER_AUDIOFILE,
    WM_TEAMTALK_INTERNAL_ERROR,
    WM_TEAMTALK_VOICE_ACTIVATION,
    WM_TEAMTALK_STREAM_AUDIOFILE_USER,
    WM_TEAMTALK_STREAM_AUDIOFILE_CHANNEL,
    WM_TEAMTALK_HOTKEY,
    WM_TEAMTALK_HOTKEY_TEST,
    WM_TEAMTALK_FILETRANSFER,
    WM_TEAMTALK_USER_AUDIOBLOCK,
    WM_TEAMTALK_USER_DESKTOPWINDOW,
    WM_TEAMTALK_DESKTOPWINDOW_TRANSFER,
    WM_TEAMTALK_USER_DESKTOPCURSOR,
    WM_TEAMTALK_CON_MAX_PAYLOAD_UPDATED,
    WM_TEAMTALK_STREAM_MEDIAFILE_CHANNEL,
) = [(WM_USER + index + 450) for index in range(40)]
